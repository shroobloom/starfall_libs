--@name Prop NPC Utils
--@author shroobloom
--@shared



-- For helping with Prop-based NPCs



local PropNPC = class("PropNPC")
PropNPC.Instances = {}


function PropNPC.setup( ent, name, maxHealth, damageCallback )
    
    ent.Health = maxHealth
    ent.MaxHealth = maxHealth
    ent.Invincible = false
    
    ent.MeleeDamageMultiplier = 1
    ent.ExplosiveDamageMultiplier = 1
    ent.DamageMultiplier = 1
    
    ent.Name = name
    
    if SERVER then
        net.start("PropNPC_setup")
        net.writeEntity(ent)
        net.writeString(name)
        net.writeDouble(maxHealth)
        net.writeDouble(maxHealth)
        net.writeBool(ent.Invincible)
        net.send()
        
        hook.add("EntityTakeDamage", "NPC_DamageDetector_" .. ent:entIndex(), function( victim, attacker, inflictor, amount, dmgType, position )
            if victim ~= ent then return end
            if ent.Invincible then return end
            
            if not isValid(attacker) or not attacker:isPlayer() then return end
            
            
            --[[ MULTIPLIERS ]]--
            amount = amount * ent.DamageMultiplier
            
            if dmgType == DAMAGE.CRUSH or dmgType == DAMAGE.SLASH or dmgType == DAMAGE.CLUB or (isValid(inflictor) and inflictor:getClass() == "cw_extrema_ratio_official") then
                amount = amount * ent.MeleeDamageMultiplier
            elseif dmgType == DAMAGE.BLAST then
                amount = amount * ent.ExplosiveDamageMultiplier
            end
            
            local mul = damageCallback and damageCallback(victim, attacker, inflictor, amount, dmgType, position ) or 1
            
            ent.Health = ent.Health - amount*mul
            
            if ent.Health <= 0 then
                ent:remove()
            end
            
            net.start("PropNPC_setHealth")
            net.writeEntity(ent)
            net.writeDouble( ent.Health )
            net.send()
        end)
        
        local hax = false
        timer.create("PropNPC_healthExploit", 0, 0, function()
            hax = not hax
            ent:setMass( hax and 50000 or 49000 )
        end)
    end
    
    table.insert(PropNPC.Instances, ent)
end


function PropNPC.setInvincible( ent, state )
    ent.Invincible = state
    
    if SERVER then
        net.start("PropNPC_setInvincible")
        net.writeEntity(ent)
        net.writeBool( state )
        net.send()
    end
end



if SERVER then
    hook.add("ClientInitialized", "", function( plr )
        for i,ent in pairs(PropNPC.Instances) do
            net.start("PropNPC_setup")
            net.writeEntity(ent)
            net.writeString(ent.Name)
            net.writeDouble(ent.Health)
            net.writeDouble(ent.MaxHealth)
            net.writeBool(ent.Invincible)
            net.send( plr )
        end
    end)
end


hook.add("EntityRemoved", "prop_npc_removed", function( e )
    if e and not e.Health then return end
    table.removeByValue( PropNPC.Instances, e )
end)



if CLIENT then
    
    net.receive("PropNPC_setup", function()
        net.readEntity(function( e )
            local name = net.readString()
            local hp = net.readDouble()
            local maxHP = net.readDouble()
            local invincible = net.readBool()
            
            PropNPC.setup( e, name, maxHP )
            e.Health = hp
            e.Invincible = invincible
        end)
    end)
    
    net.receive("PropNPC_setHealth", function()
        net.readEntity(function( e )
            e.Health = net.readDouble()
        end)
    end)
    
    net.receive("PropNPC_setInvincible", function()
        net.readEntity(function( e )
            PropNPC.setInvincible(e, net.readBool())
        end)
    end)
    
end


--[[
if SERVER then
    -- test
    PropNPC.setup( chip(), "The Faller of Stars", 100 )
end]]



return PropNPC
